{"version":3,"sources":["routes.js","components/Navigation/Navigation.jsx","services/themoviedb-api.js","pages/Homepage/Homepage.jsx","components/SearchBar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","components/App/App.jsx","index.js"],"names":["HOMEPAGE","MOVIES","MOVIE_DETAILS","CAST","Navigation","to","routes","API_KEY","fetchAPITopMovies","fetch","then","res","json","data","results","fetchAPIMovieDetails","movieId","fetchAPIMovieCast","fetchAPIMovies","query","fetchAPIMovieReviews","Homepage","state","topMovies","movies","error","fetchTopMovies","themoviedbApi","console","log","setState","catch","this","map","movie","key","id","pathname","from","props","location","src","poster_path","alt","title","Component","Searchbar","input","onSubmit","e","preventDefault","onSearch","onChange","target","value","type","MoviesPage","searchParamsQuery","URLSearchParams","search","get","fetchMovies","history","push","prevProps","prevState","prevQuery","match","url","Cast","cast","fetchMovieCast","actor","profile_path","name","character","Reviews","reviews","fetchMovieReviews","length","review","author","content","MovieDetailPage","fetchMovieDetails","params","handleBackButton","onClick","release_date","slice","vote_average","overview","genres","genre","path","component","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef4d48aa.chunk.js","sourcesContent":["export default {\n  HOMEPAGE: '/',\n  MOVIES: '/movies',\n  MOVIE_DETAILS: '/movies/:movieId',\n  CAST: '/movies/:movieId/cast',\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\n\nconst Navigation = () => (\n  <ul>\n    <li>\n      <NavLink to={routes.HOMEPAGE}>Home</NavLink>\n    </li>\n    <li>\n      <NavLink to={routes.MOVIES}>Movies</NavLink>\n    </li>\n  </ul>\n);\n\nexport default Navigation;\n","const API_KEY = '82381b1c79d0ad4bdb831ff891103a01';\n\nconst fetchAPITopMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`,\n  )\n    .then(res => res.json())\n    .then(data => data.results);\n};\n\nconst fetchAPIMovieDetails = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`,\n  ).then(res => res.json());\n};\n\nconst fetchAPIMovieCast = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`,\n  ).then(res => res.json());\n};\n\nconst fetchAPIMovies = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`,\n  )\n    .then(res => res.json())\n    .then(data => data.results);\n};\n\nconst fetchAPIMovieReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`,\n  )\n    .then(res => res.json())\n    .then(data => data.results);\n};\n\nexport default {\n  fetchAPITopMovies,\n  fetchAPIMovieDetails,\n  fetchAPIMovieCast,\n  fetchAPIMovies,\n  fetchAPIMovieReviews,\n};\n","import React, { Component } from 'react';\nimport themoviedbApi from '../../services/themoviedb-api';\nimport { Link } from 'react-router-dom';\n\nexport default class Homepage extends Component {\n  state = { topMovies: '', movies: [], error: null };\n\n  componentDidMount() {\n    this.fetchTopMovies();\n  }\n\n  fetchTopMovies = () => {\n    themoviedbApi\n      .fetchAPITopMovies()\n      .then(movies => {\n        console.log(movies);\n        this.setState({ movies });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div>\n        <h1>Trending today</h1>\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link\n                  to={{\n                    pathname: `/movies/${movie.id}`,\n                    state: { from: this.props.location },\n                  }}\n                >\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                    alt=\"poster\"\n                  />\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Searchbar extends Component {\n  state = {\n    input: '',\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSearch(this.state.input);\n    this.setState({ input: '' });\n  };\n\n  onChange = e => {\n    this.setState({ input: e.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input type=\"text\" value={this.state.input} onChange={this.onChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Searchbar from '../../components/SearchBar';\nimport themoviedbApi from '../../services/themoviedb-api';\nimport { Link } from 'react-router-dom';\n\nexport default class MoviesPage extends Component {\n  state = {\n    movies: [],\n  };\n\n  searchParamsQuery = props => {\n    return new URLSearchParams(props.location.search).get('query');\n  };\n\n  componentDidMount() {\n    const query = this.searchParamsQuery(this.props);\n\n    if (!query) {\n      return;\n    }\n\n    this.fetchMovies(query);\n  }\n\n  fetchMovies = query => {\n    return themoviedbApi\n      .fetchAPIMovies(query)\n      .then(movies => this.setState({ movies }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = this.searchParamsQuery(prevProps);\n    const query = this.searchParamsQuery(this.props);\n\n    if (prevQuery !== query) {\n      this.fetchMovies(query);\n    }\n  }\n\n  onSearch = query => {\n    this.props.history.push({\n      ...this.props.location,\n      search: `query=${query}`,\n    });\n  };\n\n  render() {\n    const { match } = this.props;\n    const { movies } = this.state;\n    return (\n      <div>\n        <Searchbar onSearch={this.onSearch} />\n\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={{\n                  pathname: `${match.url}/${movie.id}`,\n                  state: { from: this.props.location },\n                }}\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                  alt=\"poster\"\n                />\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport themoviedbApi from '../../services/themoviedb-api';\r\n\r\nexport default class Cast extends Component {\r\n  state = { cast: [], error: null };\r\n\r\n  componentDidMount() {\r\n    this.fetchMovieCast();\r\n  }\r\n\r\n  fetchMovieCast() {\r\n    const movieId = this.props.location.state.id;\r\n    themoviedbApi\r\n      .fetchAPIMovieCast(movieId)\r\n      .then(movie => this.setState({ cast: movie.cast }))\r\n      .catch(error => this.setState({ error }));\r\n  }\r\n  render() {\r\n    const { cast } = this.state;\r\n    return (\r\n      <ul>\r\n        {cast.map(actor => (\r\n          <li>\r\n            {actor.profile_path && (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\r\n                alt=\"profile\"\r\n              />\r\n            )}\r\n            <p>{actor.name}</p>\r\n            <p>Character: {actor.character}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport themoviedbApi from '../../services/themoviedb-api';\r\n\r\nexport default class Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n  componentDidMount() {\r\n    this.fetchMovieReviews();\r\n  }\r\n\r\n  fetchMovieReviews = () => {\r\n    const movieId = this.props.location.state.id;\r\n    themoviedbApi\r\n      .fetchAPIMovieReviews(movieId)\r\n      .then(reviews => this.setState({ reviews }));\r\n  };\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <>\r\n        {reviews.length === 0 && (\r\n          <p>We don`t have any reviews for this movie.</p>\r\n        )}\r\n        {reviews.length !== 0 && (\r\n          <ul>\r\n            {reviews.map(review => (\r\n              <li key={review.id}>\r\n                <p>Author: {review.author}</p>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport themoviedbApi from '../../services/themoviedb-api';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Cast from '../../components/Cast';\r\nimport Reviews from '../../components/Reviews';\r\nimport routes from '../../routes';\r\n\r\nexport default class MovieDetailPage extends Component {\r\n  state = { movie: null, error: null };\r\n\r\n  componentDidMount() {\r\n    this.fetchMovieDetails();\r\n  }\r\n\r\n  fetchMovieDetails = () => {\r\n    const movieId = this.props.match.params.movieId;\r\n\r\n    themoviedbApi\r\n      .fetchAPIMovieDetails(movieId)\r\n      .then(movie => this.setState({ movie }))\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n  };\r\n\r\n  handleBackButton = () => {\r\n    const { location, history } = this.props;\r\n    if (location.state && location.state.from) {\r\n      history.push(location.state.from);\r\n      return;\r\n    }\r\n\r\n    history.push(routes.MOVIES);\r\n  };\r\n\r\n  render() {\r\n    const { movie } = this.state;\r\n    const { match } = this.props;\r\n    return (\r\n      <>\r\n        <button onClick={this.handleBackButton}>Back to movies</button>\r\n        {movie && (\r\n          <div>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w400${movie.poster_path}`}\r\n              alt=\"poster\"\r\n            />\r\n            <h2>\r\n              {movie.title} ({movie.release_date.slice(0, 4)})\r\n            </h2>\r\n            <p>User score: {movie.vote_average * 10}%</p>\r\n            <h3>Overview</h3>\r\n            <p>{movie.overview}</p>\r\n            <h3>Genres</h3>\r\n            <ul>\r\n              {movie.genres.map(genre => (\r\n                <li>{genre.name}</li>\r\n              ))}\r\n            </ul>\r\n            <h3>Additional information</h3>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/cast`,\r\n                state: {\r\n                  id: movie.id,\r\n                  from: this.props.location.state.from,\r\n                },\r\n              }}\r\n            >\r\n              Cast\r\n            </Link>\r\n            <p></p>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/reviews`,\r\n                state: {\r\n                  id: movie.id,\r\n                  from: this.props.location.state.from,\r\n                },\r\n              }}\r\n            >\r\n              Reviews\r\n            </Link>\r\n            <Route path={`${match.path}/cast`} component={Cast} />\r\n            <Route path={`${match.path}/reviews`} component={Reviews} />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Navigation from '../../components/Navigation';\r\nimport Homepage from '../../pages/Homepage';\r\nimport MoviesPage from '../../pages/MoviesPage';\r\nimport MovieDetailPage from '../../pages/MovieDetailsPage';\r\nimport routes from '../../routes';\r\n// import styles from './App.module.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation />\r\n\r\n      <Switch>\r\n        <Route exact path={routes.HOMEPAGE} component={Homepage} />\r\n        <Route path={routes.MOVIE_DETAILS} component={MovieDetailPage} />\r\n        <Route path={routes.MOVIES} component={MoviesPage} />\r\n\r\n        <Redirect to={routes.HOMEPAGE} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}